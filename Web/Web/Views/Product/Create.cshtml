@model Data.Data.Product

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="card">
    <div class="card-body">
        <h5 class="card-title">Crear Producto</h5>
        @using (Html.BeginForm("Create", "Product", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Productos</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)
                <div class="form-group">
                    @Html.Label("Archivo de imagen: ")
                    <div class="col-md-10">
                        <input type="file" name="PostedFile" class="form-control" accept="image/*" />
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Modelo: ")
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Model, new { htmlAttributes = new { @class = "form-control", @required = true } })
                        @Html.ValidationMessageFor(model => model.Model, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Número de parte: ")
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.NumberPart, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NumberPart, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Velocidad impresión: ")
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PrintSpeed, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return soloNumeros(event)" } })
                        @Html.ValidationMessageFor(model => model.PrintSpeed, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Máximo mensual: ")
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.MaxMonthly, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return soloNumeros(event)" } })
                        @Html.ValidationMessageFor(model => model.MaxMonthly, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Recomendado mensual: ")
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.RecMonthly, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return soloNumeros(event)" } })
                        @Html.ValidationMessageFor(model => model.RecMonthly, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Detalles específicos: ")
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Detail, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Detail, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Precio: ")
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Pvp, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return soloNumeros(event)" } })
                        @Html.ValidationMessageFor(model => model.Pvp, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Categoría: ")
                    <div class="col-md-10">
                        @Html.DropDownList("CategoryId", ViewBag.CategoryList as SelectList, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Usuario cargo: ")
                    <div class="col-md-10">
                        @Html.DropDownList("UserId", ViewBag.UserList as SelectList, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br />
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <button type="submit" class="btn btn-success">
                            <i class="bi bi-sd-card"></i> Guardar
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<div>
    <a href="@Url.Action("Index")" class="btn btn-primary">
        <i class="bi bi-arrow-left"></i> Regresar
    </a>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
