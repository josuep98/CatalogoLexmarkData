@model Data.Data.User

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="card">
    <div class="card-body">
        <h5 class="card-title">Crear/editar usuario</h5>
        @using (Html.BeginForm("Create", "User", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Usuario</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)
                <div class="form-group">
                    @Html.Label("Primer nombre: (Requerido)")
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return soloLetras(event)", @required = true } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Segundo nombre: ")
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.SecondName, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return soloLetras(event)" } })
                        @Html.ValidationMessageFor(model => model.SecondName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Primer apellido: (Requerido)")
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FirstLastName, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return soloLetras(event)", @required = true } })
                        @Html.ValidationMessageFor(model => model.FirstLastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Segundo apellido: ")
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.SecondLastName, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return soloLetras(event)" } })
                        @Html.ValidationMessageFor(model => model.SecondLastName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Documento de identidad: ")
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DocumentId, new { htmlAttributes = new { @class = "form-control", @onkeypress = "return soloNumeros(event)", @required = true } })
                        @Html.ValidationMessageFor(model => model.DocumentId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Nombre de usuario: ")
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.User1, new { htmlAttributes = new { @class = "form-control", @required = true } })
                        @Html.ValidationMessageFor(model => model.User1, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Contraseña: ")
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @type = "password", @required = true } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("Rol: ")
                    <div class="col-md-10">
                        @Html.DropDownList("RolId", ViewBag.RolList as SelectList, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.RolId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br />
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <button type="submit" class="btn btn-success">
                            <i class="bi bi-sd-card"></i> Guardar
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<div>
    <a href="@Url.Action("Index")" class="btn btn-primary">
        <i class="bi bi-arrow-left"></i> Regresar
    </a>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
